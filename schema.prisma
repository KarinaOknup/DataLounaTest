datasource db {
  url      = env("DATABASE_URL")
  provider = "postgresql"
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id         Int      @id @default(autoincrement())
  name       String   @db.VarChar(100)
  number     String   @unique @db.VarChar(20)
  address    String
  createdAt  DateTime @default(now()) @map("created_at")
  updatedAt  DateTime @default(now()) @map("updated_at")
  status     UserStatus
  balance    Decimal  @default(0.00) @db.Decimal(10, 2)

  purchases  Purchase[]
}

model Product {
  id         Int      @id @default(autoincrement())
  name       String   @db.VarChar(255)
  count      Int      @default(0) @db.Integer
  price      Decimal  @default(0.00) @db.Decimal(10, 2)
  createdAt  DateTime @default(now()) @map("created_at")
  updatedAt  DateTime @default(now()) @map("updated_at")
  status     ProductStatus

  purchases  Purchase[]
}

model Purchase {
  id          Int      @id @default(autoincrement())
  userId      Int      @map("user_id")
  productId   Int      @map("product_id")
  productCount Int     @map("product_count")
  totalPrice  Decimal  @default(0.00) @db.Decimal(10, 2) @map("total_price")
  status      PurchaseStatus
  createdAt   DateTime @default(now()) @map("created_at")
  updatedAt   DateTime @default(now()) @map("updated_at")

  user        User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  product     Product  @relation(fields: [productId], references: [id], onDelete: Cascade)
}

enum UserStatus {
  deleted
  active
  banned
}

enum ProductStatus {
  deleted
  active
}

enum PurchaseStatus {
  pending
  deleted
  cancelled
  received
}